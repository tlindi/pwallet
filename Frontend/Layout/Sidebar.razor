@inherits SimpLn

@inject IJSRuntime Js
@inject NavigationManager NavManager

<div class="hamburger-icon @( _isMenuOpen ? "hidden" : "")" @onclick="ToggleMenu">
	<i class="bi bi-list"></i>
</div>

<div class="sidebar @( _isMenuOpen ? "open" : "")">
	<div class="menu-header @( !_isMenuOpen ? "hidden" : "")">
		<button class="btn-close float-end close-button" @onclick="CloseMenu"></button>
	</div>
	<div class="menu-content-sidebar">
		<div>
			<span>General</span>
			<button type="button" class="custom-sidebar-button custom-button-outline" @onclick='() => GoTo("/")'>Wallet</button><br />
			<button type="button" class="custom-sidebar-button custom-button-outline mt-2" @onclick='() => GoTo("Node")'>Node</button><br />
		</div>
		<div class="mt-3">
			<span>Settings</span>
			<button type="button" class="custom-sidebar-button custom-button-outline" @onclick='() => GoTo("Backend")'>Backend</button><br />
			<button type="button" class="custom-sidebar-button custom-button-outline mt-2" @onclick='() => GoTo("Cloudflare")'>Cloudflare</button><br />
			<button type="button" class="custom-sidebar-button custom-button-outline mt-2" @onclick='() => GoTo("CustomBolt12")'>Custom Bolt12</button><br />
		</div>
		<div class="mt-3">
			<span>Other</span>
			<button type="button" class="custom-sidebar-button custom-button-outline" @onclick='() => GoTo("Support")'>Support</button><br />
			<button type="button" class="custom-sidebar-button custom-button-outline mt-2" @onclick='() => GoTo("Donate")'>Donate</button><br />
		</div>
		<div class="mt-3">
			<img src="media/512x512.png" width="90%;"/>
		</div>
	</div>
	
</div>


@code {
	private bool _isMenuOpen = false;

	private void ToggleMenu()
	{
		_isMenuOpen = !_isMenuOpen;
		if (_isMenuOpen)
		{
			RegisterClickOutsideListener();
		}
	}

	private void CloseMenu()
	{
		_isMenuOpen = false;
		StateHasChanged();
	}

	[JSInvokable]
	public void CloseMenuFromOutside()
	{
		CloseMenu();
	}

	private async void RegisterClickOutsideListener()
	{
		await Js.InvokeVoidAsync("addClickOutsideListener", DotNetObjectReference.Create(this));
	}

	private void GoTo(string url)
	{
		_isMenuOpen = false;
		NavManager.NavigateTo(url);
		StateHasChanged();
	}
}